"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7048],{64865:function(t,r,e){e.d(r,{C:function(){return a}});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},92645:function(t,r,e){e.d(r,{C:function(){return c}});var a=e(33154),n=e(85982);class c{featureName=n.dm.name;constructor(t){this.contractWrapper=t}async get(){let[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return n.bI.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}set=(0,a.c)(async t=>{let r=await n.bI.parseAsync(t);return a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})})}},75884:function(t,r,e){e.d(r,{C:function(){return c}});var a=e(33154),n=e(85982);class c{featureName=n.d5.name;constructor(t){this.contractWrapper=t}async getRecipient(){let t=await this.contractWrapper.read("primarySaleRecipient",[]);return t}setRecipient=(0,a.c)(async t=>a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPrimarySaleRecipient",args:[t]}))}},77299:function(t,r,e){e.d(r,{S:function(){return c}});var a=e(33154),n=e(79989);class c{get chainId(){return this._chainId}constructor(t,r,e){this.contractWrapper=t,this.storage=r,this.erc20=new n.f(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async get(){return this.erc20.get()}async balance(){return await this.erc20.balance()}async balanceOf(t){return this.erc20.balanceOf(t)}async totalSupply(){return await this.erc20.totalSupply()}async allowance(t){return await this.erc20.allowance(t)}async allowanceOf(t,r){return await this.erc20.allowanceOf(t,r)}transfer=(0,a.c)(async(t,r)=>this.erc20.transfer.prepare(t,r));transferFrom=(0,a.c)(async(t,r,e)=>this.erc20.transferFrom.prepare(t,r,e));setAllowance=(0,a.c)(async(t,r)=>this.erc20.setAllowance.prepare(t,r));transferBatch=(0,a.c)(async t=>this.erc20.transferBatch.prepare(t))}},17048:function(t,r,e){e.r(r),e.d(r,{Token:function(){return m}});var a=e(5572),n=e(85982),c=e(33154),s=e(85089),i=e(16810),o=e(64865),p=e(92645),h=e(31049),l=e(75884),u=e(92598);class d{constructor(t,r){this.contractWrapper=t,this.events=r}async getAllHolderBalances(){let t=await this.events.getEvents("Transfer"),r=t.map(t=>t.data),e={};r.forEach(t=>{let r=t?.from,n=t?.to,c=t?.value;r!==a.d&&(r in e||(e[r]=u.O$.from(0)),e[r]=e[r].sub(c)),n!==a.d&&(n in e||(e[n]=u.O$.from(0)),e[n]=e[n].add(c))});let n=Object.entries(e),c=await Promise.all(n.map(t=>{let[,r]=t;return(0,i.a)(this.contractWrapper.getProvider(),this.contractWrapper.address,r)}));return n.map((t,r)=>{let[e]=t;return{holder:e,balance:c[r]}})}}var f=e(79989),g=e(77299);e(56662),e(68870),e(11953),e(53010);class m extends g.S{static contractRoles=n.dy;constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},c=arguments.length>4?arguments[4]:void 0,u=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.ct(t,r,c,a,e);super(g,e,u),this.abi=n.bm.parse(c||[]),this.metadata=new s.C(this.contractWrapper,n.cc,this.storage),this.app=new s.b(this.contractWrapper,this.metadata,this.storage),this.roles=new h.C(this.contractWrapper,m.contractRoles),this.sales=new l.C(this.contractWrapper),this.events=new s.a(this.contractWrapper),this.history=new d(this.contractWrapper,this.events),this.encoder=new i.C(this.contractWrapper),this.estimator=new s.G(this.contractWrapper),this.platformFees=new p.C(this.contractWrapper),this.interceptor=new o.C(this.contractWrapper),this.signature=new f.e(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[t]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await (0,n.aO)(t)])}async isTransferRestricted(){let t=await this.contractWrapper.read("hasRole",[(0,n.H)("transfer"),a.d]);return!t}mint=(0,c.c)(async t=>this.erc20.mint.prepare(t));mintTo=(0,c.c)(async(t,r)=>this.erc20.mintTo.prepare(t,r));async getMintTransaction(t,r){return this.erc20.getMintTransaction(t,r)}mintBatchTo=(0,c.c)(async t=>this.erc20.mintBatchTo.prepare(t));delegateTo=(0,c.c)(async t=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await (0,n.aO)(t)]}));burn=(0,c.c)(t=>this.erc20.burn.prepare(t));burnFrom=(0,c.c)(async(t,r)=>this.erc20.burnFrom.prepare(t,r));async prepare(t,r,e){return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}}}]);